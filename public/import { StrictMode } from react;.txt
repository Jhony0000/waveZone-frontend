import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import App from "./App.jsx";
import "./App.css";
import store from "./store/store.js";
import { Provider as RegularUserProvider } from "react-redux";
import { Provider as businessUserProvider } from "react-redux";
import { createBrowserRouter, Outlet, RouterProvider } from "react-router-dom";
import Home from "./pages/Home.jsx";
import LoginPage from "./pages/LoginPage.jsx";
import SginupPage from "./pages/SginupPage.jsx";
import AuthLayout from "./components/AuthLayout.jsx";
import Profail from "./pages/Profail.jsx";
import Message from "./pages/Message.jsx";
import PostPage from "./pages/PostPage.jsx";
import VideoPage from "./pages/VideoPage.jsx";
import UplodBlogPage from "./pages/UplodBlogPage.jsx";
import BlogPage from "./pages/BlogPage.jsx";
import ProfailVideosPage from "./pages/profail-pages/ProfailVideosPage.jsx";
import ProfailBlogsPage from "./pages/profail-pages/ProfailBlogsPage.jsx";
import NotificationPage from "./pages/NotificationPage.jsx";
import SearchPage from "./pages/SearchPage.jsx";
import MessageSendOutLet from "./pages/messageSendOutlet/MessageSendOutLet.jsx";
import VideoChart from "./pages/videoAnalyzePage/VideoChart.jsx";
import BusinessApp from "./BusinessApp.jsx";
import BusinessHome from "./pages/BussinessPage/Home.jsx";
import { BusinessAuthLayout } from "./bussinessComponents/index.js";
import {
  BusinessLoginPage,
  BusinessSginupPage,
} from "../src/pages/BussinessPage/index.js";

const router = createBrowserRouter([
  {
    path: "/",
    element: <App />,
    children: [
      {
        path: "/",
        element: (
          <AuthLayout authentication>
            <Home />
          </AuthLayout>
        ),
      },
      {
        path: "/login",
        element: (
          <AuthLayout authentication={false}>
            <LoginPage />,
          </AuthLayout>
        ),
      },
      {
        path: "/sginup",
        element: (
          <AuthLayout authentication={false}>
            <SginupPage />,
          </AuthLayout>
        ),
      },

      {
        path: "/profail/:id",
        element: (
          <AuthLayout authentication>
            <Profail />
          </AuthLayout>
        ),
        children: [
          {
            path: "/profail/:id",
            element: (
              <AuthLayout authentication>
                <ProfailVideosPage />
              </AuthLayout>
            ),
          },
          {
            path: "profail/blog/:id",
            element: (
              <AuthLayout authentication>
                <ProfailBlogsPage />
              </AuthLayout>
            ),
          },
        ],
      },

      {
        path: "/message",
        element: (
          <AuthLayout authentication>
            <Message />
          </AuthLayout>
        ),
      },
      {
        path: "/message-send/:id",
        element: (
          <AuthLayout authentication>
            <MessageSendOutLet />
          </AuthLayout>
        ),
      },

      {
        path: "/post",
        element: (
          <AuthLayout authentication>
            <PostPage />
          </AuthLayout>
        ),
      },
      {
        path: "/blog",
        element: (
          <AuthLayout authentication>
            <BlogPage />
          </AuthLayout>
        ),
      },
      {
        path: "/uplod-blog",
        element: (
          <AuthLayout authentication>
            <UplodBlogPage />
          </AuthLayout>
        ),
      },
      {
        path: "/uplod-video",
        element: (
          <AuthLayout authentication>
            <VideoPage />
          </AuthLayout>
        ),
      },
      {
        path: "/notification",
        element: (
          <AuthLayout authentication>
            <NotificationPage />
          </AuthLayout>
        ),
      },
      {
        path: "/explor",
        element: (
          <AuthLayout authentication>
            <SearchPage />
          </AuthLayout>
        ),
      },
      {
        path: "/video-analytice/:videoId",
        element: (
          <AuthLayout authentication>
            <VideoChart />
          </AuthLayout>
        ),
      },

      // bussiness routes
    ],
  },
  {
    path: "/business",
    element: <BusinessApp />,
    children: [
      {
        path: "",
        element: (
          <BusinessAuthLayout authentication>
            <BusinessHome />
          </BusinessAuthLayout>
        ),
      },
      {
        path: "/business/sginup",
        element: (
          <BusinessAuthLayout authentication={false}>
            <BusinessSginupPage />
          </BusinessAuthLayout>
        ),
      },
      {
        path: "/business/login",
        element: (
          <BusinessAuthLayout authentication={false}>
            <BusinessLoginPage />
          </BusinessAuthLayout>
        ),
      },
    ],
  },
]);

createRoot(document.getElementById("root")).render(
  <StrictMode>
    <RegularUserProvider store={store}>
      <RouterProvider router={router} />
    </RegularUserProvider>
  </StrictMode>
);
